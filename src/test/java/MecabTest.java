import org.junit.Test;
import static org.junit.Assert.*;
import org.chasen.mecab.MeCab;
import org.chasen.mecab.Tagger;
import org.chasen.mecab.Model;
import org.chasen.mecab.Lattice;
import org.chasen.mecab.Node;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'momamene' at '3/8/14 3:03 PM' with Gradle 1.10
 *
 * @author momamene, @date 3/8/14 3:03 PM
 */

public class MecabTest {
    static {
        try {
            System.loadLibrary("MeCab");
        } catch (UnsatisfiedLinkError e) {
            System.err.println("export LD_LIBRARY_PATH=/usr/local/lib");
            System.exit(1);
        }
    }
    @Test public void testMecab() {
        assertEquals("0.996", MeCab.VERSION);
        String str = "Learnyware는 지구상 가장 큰 학교이다.";
        Tagger tagger = new Tagger();
        tagger.parse(str);
        Node node = tagger.parseToNode(str);
        assertEquals(node.getSurface(), "");
        assertEquals(node.getFeature(), "BOS/EOS,*,*,*,*,*,*,*,*");
        node = node.getNext();
        assertEquals(node.getSurface(), "Learnyware");
        assertEquals(node.getFeature(), "SL,*,*,*,*,*,*,*,*");
        node = node.getNext();
        assertEquals(node.getSurface(), "는");
        assertEquals(node.getFeature(), "JX,*,T,는,*,*,*,*,*");
        node = node.getNext();
        assertEquals(node.getSurface(), "지구");
        assertEquals(node.getFeature(), "NNG,*,F,지구,*,*,*,*,*");
        node = node.getNext();
        assertEquals(node.getSurface(), "상");
        assertEquals(node.getFeature(), "XSN,*,T,상,*,*,*,*,*");
        node = node.getNext();
        assertEquals(node.getSurface(), "가장");
        assertEquals(node.getFeature(), "MAG,*,T,가장,*,*,*,*,*");
        node = node.getNext();
        assertEquals(node.getSurface(), "큰");
        assertEquals(node.getFeature(), "VA+ETM,*,T,큰,Inflect,VA,ETM,크/VA+ㄴ/ETM,*");
        node = node.getNext();
        assertEquals(node.getSurface(), "학교");
        assertEquals(node.getFeature(), "NNG,*,F,학교,*,*,*,*,*");
        node = node.getNext();
        assertEquals(node.getSurface(), "이");
        assertEquals(node.getFeature(), "VCP,*,F,이,*,*,*,*,*");
        node = node.getNext();
        assertEquals(node.getSurface(), "다");
        assertEquals(node.getFeature(), "EF,*,F,다,*,*,*,*,*");
        node = node.getNext();
        assertEquals(node.getSurface(), ".");
        assertEquals(node.getFeature(), "SF,*,*,.,*,*,*,*,*");
        node = node.getNext();
        assertEquals(node.getSurface(), "");
        assertEquals(node.getFeature(), "BOS/EOS,*,*,*,*,*,*,*,*");
        node = node.getNext();
        assertTrue("node should be null", node == null);
    }
}
